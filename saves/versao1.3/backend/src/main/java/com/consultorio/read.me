Projeto Rodando: Certifique-se de que o Spring Boot está ativo em http://localhost:8080.
Endpoints: Os seguintes endpoints devem estar implementados (baseados nos controladores sugeridos):

POST /api/profissionais - Criar um profissional.
POST /api/pacientes - Criar um paciente.
POST /api/fichas-medicas - Criar uma ficha médica.
POST /api/prontuarios - Criar um prontuário odontológico.


Postman: Crie uma nova coleção chamada "Odontosys Tests".

Passo 1: Configurar a Coleção no Postman

Abra o Postman.
Clique em "New" > "Collection" e nomeie como "Odontosys Tests".
Adicione as requisições abaixo à coleção.

Passo 2: Criar Requisições no Postman1. Requisição: Criar um Profissional

Método: POST
URL: http://localhost:8080/api/profissionais
Headers:

Content-Type: application/json


Body (raw - JSON):

{
  "nome": "Dr. João Silva",
  "crosp": "CROSP-12345",
  "enderecoCompleto": "Rua das Flores, 456, Recife-PE"
}

---------

Ação no Postman:

Clique em "Send".
Verifique a resposta (ex.: {"id": 1, "nome": "Dr. João Silva", ...}).
Anote o id retornado (ex.: 1) para usar nas próximas requisições.



2. Requisição: Criar um Paciente

Método: POST
URL: http://localhost:8080/api/pacientes
Headers:

Content-Type: application/json


Body (raw - JSON):

{
  "nome": "Maria Oliveira",
  "rg": "12.345.678-9",
  "cpf": "123.456.789-00",
  "dataNascimento": "15/05/1985",
  "sexo": "Feminino",
  "naturalidade": "Recife",
  "nacionalidade": "Brasileira",
  "estadoCivil": "Casada",
  "profissao": "Contadora",
  "telefone": "(81) 98765-4321",
  "celular": "(81) 91234-5678",
  "email": "maria.oliveira@email.com",
  "enderecoResidencial": "Avenida Brasil, 789, Recife-PE",
  "enderecoProfissional": "Escritório Contábil, Recife-PE",
  "indicadoPor": "Amigo",
  "convenio": "Amil",
  "numeroInscricaoConvenio": "AML789012",
  "cirurgiaoDentistaAnterior": "Dr. Pedro",
  "dataAtendimentoAnterior": "01/09/2025",
  "responsavelNome": "Carlos Oliveira",
  "responsavelRg": "98.765.432-1",
  "responsavelCpf": "987.654.321-00",
  "responsavelTelefone": "(81) 98765-1234",
  "responsavelCelular": "(81) 91234-8765",
  "responsavelEmail": "carlos.oliveira@email.com",
  "responsavelEstadoCivil": "Casado",
  "conjugeNome": "João Oliveira",
  "conjugeRg": "12.345.678-0",
  "conjugeCpf": "123.456.789-01",
  "conjugeTelefone": "(81) 98765-4322",
  "conjugeCelular": "(81) 91234-5679",
  "conjugeEmail": "joao.oliveira@email.com"
}

Ação no Postman:

Clique em "Send".
Verifique a resposta (ex.: {"id": 1, "nome": "Maria Oliveira", ...}).
Anote o id retornado (ex.: 1) para usar nas próximas requisições.



3. Requisição: Criar uma Ficha Médica

Método: POST
URL: http://localhost:8080/api/fichas-medicas
Headers:

Content-Type: application/json


Body (raw - JSON):

{
  "paciente": {
    "id": 1
  },
  "tomandoMedicamento": true,
  "medicamentosPosologia": "Paracetamol 500mg, 3x/dia",
  "temAlergia": false,
  "tipoAlergia": "",
  "pressao": "NORMAL",
  "problemaCardiaco": false,
  "tipoProblemaCardiaco": "",
  "faltaAr": false,
  "diabetes": false,
  "sangramento": "NORMAL",
  "cicatrizacao": "NORMAL",
  "cirurgia": false,
  "gestante": false,
  "semanasGestacao": 0,
  "problemasSaude": "",
  "queixaPrincipal": "Dor nos dentes superiores",
  "reacaoAnestesia": false,
  "tipoReacaoAnestesia": "",
  "ultimoTratamentoDentario": "06/2024",
  "dorDentesGengiva": true,
  "gengivaSangra": false,
  "gengivaSangraHigiene": false,
  "gengivaSangraAsVezes": false,
  "gostoRuimBocaSeca": false,
  "escovacaoDiaria": 2,
  "usaFioDental": true,
  "usaFioDentalDiariamente": true,
  "dorEstaloMaxilarOuvido": false,
  "rangeDentes": false,
  "feridaBolhaFaceLabios": false,
  "fuma": false,
  "quantidadeFumo": ""
}


Ação no Postman:

Substitua o id de "paciente": {"id": 1} pelo id do paciente criado na requisição anterior.
Clique em "Send".
Verifique a resposta (ex.: {"id": 1, "paciente": {"id": 1}, ...}).
Anote o id retornado (ex.: 1) para o próximo passo.



4. Requisição: Criar um Prontuário Odontológico

Método: POST
URL: http://localhost:8080/api/prontuarios
Headers:

Content-Type: application/json


Body (raw - JSON):
json
{
  "numeroProntuario": "PR001",
  "paciente": {
    "id": 1
  },
  "profissional": {
    "id": 1
  },
  "fichaMedica": {
    "id": 1
  },
  "opcaoTratamento": "Opção 1",
  "propositosOpcao1": "Correção de cárie e limpeza",
  "riscosOpcao1": "Sensibilidade temporária, possível infecção",
  "custosOpcao1": "R$ 600,00",
  "propositosOpcao2": "Extração e prótese",
  "riscosOpcao2": "Sangramento, rejeição de prótese",
  "custosOpcao2": "R$ 1500,00",
  "fichaClinica": [
    {
      "data": "06/10/2025",
      "evolucaoIntercorrencias": "Consulta inicial às 14:33. Paciente relatou dor moderada. Sem intercorrências.",
      "assinaturaPaciente": "Maria Oliveira",
      "assinaturaProfissional": "Dr. João Silva"
    }
  ],
  "dataConsentimento": "06/10/2025",
  "assinaturaPaciente": "Maria Oliveira",
  "assinaturaProfissional": "Dr. João Silva"
}

Ação no Postman:

Substitua os ids de "paciente": {"id": 1}, "profissional": {"id": 1} e "fichaMedica": {"id": 1} pelos ids reais obtidos nas requisições anteriores.
A data e hora ("06/10/2025 14:33") refletem o horário atual fornecido.
Clique em "Send".
Verifique a resposta (ex.: {"id": 1, "numeroProntuario": "PR001", ...}).



Passo 3: Implementar os Endpoints (se necessário)
Certifique-se de que os controladores estão implementados. Aqui estão os exemplos básicos (ajustados com base no pacote com.consultorio.domain):

ProfissionalController.java: